user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;

    upstream old_backend_http {
        server 127.0.0.1:8081;
    }

    upstream old_backend_https {
        server 127.0.0.1:8444;
    }

    upstream new_backend_https {
        ip_hash;
        server 127.0.0.1:9444;
        server 127.0.0.1:10444;
    }

    server {
        listen       80;
        server_name  _;
        root         /usr/share/nginx/html;

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;

	# Redirect requests for the new site to https
        location = / {
	  return 301 https://$host$request_uri;
        }

        location = /index.php {
          return 301 https://$host$request_uri;
        }

        location /part1 {
          return 301 https://$host$request_uri;
        }

        location = /part2/special/page.php {
          return 301 https://$host$request_uri;
        }

        location /part3 {
          return 301 https://$host$request_uri;
        }

        # Send everything else to the old site
        location / {
      	  proxy_pass http://old_backend_http;
      	  proxy_set_header Host      $host;
      	  proxy_set_header X-Real-IP $remote_addr;
        }

        error_page 404 /404.html;
            location = /40x.html {
        }

        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }
    }

# Settings for a TLS enabled server.

    server {
        listen       443 ssl http2;
        server_name  _;
        root         /usr/share/nginx/html;

        ssl_certificate "/etc/pki/tls/certs/localhost.crt";
        ssl_certificate_key "/etc/pki/tls/private/localhost.key";
        ssl_session_cache shared:SSL:1m;
        ssl_session_timeout  10m;
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;

        location = / {
          proxy_pass https://new_backend_https;
          proxy_set_header Host      $host;
       	  proxy_set_header X-Real-IP $remote_addr;
        }

        location = /index.php {
          proxy_pass https://new_backend_https;
          proxy_set_header Host      $host;
       	  proxy_set_header X-Real-IP $remote_addr;
        }

        location /part1 {
          proxy_pass https://new_backend_https;
          proxy_set_header Host      $host;
       	  proxy_set_header X-Real-IP $remote_addr;
        }

        location = /part2/special/page.php {
          proxy_pass https://new_backend_https;
          proxy_set_header Host      $host;
       	  proxy_set_header X-Real-IP $remote_addr;
        }

        location /part3 {
          proxy_pass https://new_backend_https;
          proxy_set_header Host      $host;
       	  proxy_set_header X-Real-IP $remote_addr;
        }

	# Send everything else to the old site
        location / {
          proxy_pass https://old_backend_https;
          proxy_set_header Host      $host;
       	  proxy_set_header X-Real-IP $remote_addr;
        }

        error_page 404 /404.html;
            location = /40x.html {
        }

        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }
    }

}
